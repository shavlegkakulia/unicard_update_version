{"Name":"Google Analytics for iOS","Id":2299,"Alias":"googleiosanalytics","Description":"Set up and customize tracking for your mobile apps.\n\n## Report and analyze\n\nUse our simple and powerful APIs to retrieve report data from Google Analytics. With the reporting APIs, you can save time by automating complex reporting tasks. You can also integrate Google Analytics data with your own business data for deeper insights.\n\n\n","Version":"3.13.0.0","Summary":"Collect, configure, and analyze your data to reach the right audience.","QuickStart":"# Get your Google Analytics Tracking Id\n\nFollow the instructions in [this page](https://support.google.com/analytics/answer/2614741) to set up and get the tracking ID for a new app property in either a new or existing Google Analytics account.\n\n# iOS Getting Started\n\nThere are two steps to getting started with the iOS SDK:\n\n1. Initialize the tracker\n2. Add screen measurement\n\nAfter completing these steps, you\u0027ll be able to measure the following with Google Analytics:\n\n* App installations\n* Active users and demographics\n* Screens and user engagement\n* Crashes and exceptions\n\n## Initializing the tracker\n\nTo initialize the tracker, use the `Google.Analytics` namespace in your AppDelegate and add this code to your AppDelegate\u0027s `FinishedLaunching` method:\n\n```csharp\nusing Google.Analytics;\n//...\n\n// Shared GA tracker\npublic IGAITracker Tracker;\n\n// Learn how to get your own Tracking Id from:\n// https://support.google.com/analytics/answer/2614741?hl=en\npublic static readonly string TrackingId = \"UA-TRACKING-ID\";\n\npublic override bool FinishedLaunching (UIApplication app, NSDictionary options)\n{\n\n\t// Optional: set Google Analytics dispatch interval to e.g. 20 seconds.\n\tGai.SharedInstance.DispatchInterval = 20;\n\t\n\t// Optional: automatically send uncaught exceptions to Google Analytics.\n\tGai.SharedInstance.TrackUncaughtExceptions = true;\n\t\n\t// Initialize tracker.\n\tTracker = Gai.SharedInstance.GetTracker (TrackingId);\n}\n```\n\n**Note**: When you obtain a tracker for a given tracking Id, the tracker instance is persisted in the library. When you call `GetTracker` with the same tracking Id later, the same tracker instance will be returned. Also, the Google Analytics SDK exposes a default tracker instance that gets set to the first tracker instance created. It can be accessed by:\n\n```csharp\nGai.SharedInstance.DefaultTracker\n```\n\nNote that in the above example, \"UA-TRACKING-ID\" here is a placeholder for the tracking ID assigned to you when you created your Google Analytics property. If you are only using one property ID in your app, using the default tracker method is best.\n\n## Implementing screen measurement\n\nTo implement it you must provide the view name to be used in your Google Analytics reports. A good place to put this is the view controller\u0027s initializer method, if you have one, or the `ViewDidAppear` method:\n\n```csharp\nusing Google.Analytics;\n//...\n\npublic override void ViewDidAppear (bool animated)\n{\n\tbase.ViewDidAppear (animated);\n\t\n\t// This screen name value will remain set on the tracker and sent with\n\t// hits until it is set to a new value or to null.\n\tGai.SharedInstance.DefaultTracker.Set (GaiConstants.ScreenName, \"Main View\");\n\n\tGai.SharedInstance.DefaultTracker.Send (DictionaryBuilder.CreateAppView ().Build ());\n}\n```\n\n**Note**: `GaiConstants` is a static class containing all the constants you can set in the `Set` method from the `DictionaryBuilder` class.\n\nTo learn more about screen measurement, see the [Screens Developer Guide](https://developers.google.com/analytics/devguides/collection/ios/v3/screens).\n\nCongratulations! Your Xamarin.iOS app is now setup to send data to Google Analytics.\n\n## Next steps\n\nYou can do much more with Google Analytics, including measuring campaigns, in-app payments and transactions, and user interaction events. See the following developer guides to learn how to add these features to your implementation:\n\n* [Advanced Configuration](https://developers.google.com/analytics/devguides/collection/ios/v3/advanced) – Learn more about advanced configuration options, including using multiple trackers.\n* [Measuring Campaigns](https://developers.google.com/analytics/devguides/collection/ios/v3/campaigns) – Learn how to implement campaign measurement to understand which channels and campaigns are driving app installs.\n* [Measuring Events](https://developers.google.com/analytics/devguides/collection/ios/v3/events) – Learn how to measure user engagement with interactive content like buttons, videos, and other media using Events.\n* [Measuring In-App Payments](https://developers.google.com/analytics/devguides/collection/ios/v3/ecommerce) – Learn how to measure in-app payments and transactions.\n* [User timings](https://developers.google.com/analytics/devguides/collection/ios/v3/usertimings) – Learn how to measure user timings in your app to measure load times, engagement with media, and more.\n\n# More Resources\n\n* [Google Analytics Developer Portal](https://developers.google.com/analytics/devguides/collection/)\n\n\n###### The [original content material](https://developers.google.com/analytics/devguides/collection/) of this page is licensed under the [Creative Commons Attribution 3.0 License](http://creativecommons.org/licenses/by/3.0/) and has been adapted to match this page format.","Hash":"875df3cde20c94f4c88f26857c74b374","TargetPlatforms":["ios"],"TrialHash":null}